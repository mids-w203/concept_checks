library(magrittr)
%>%
?%>%
?`%>%`
plot_z | plot_t)
plot_z | plot_t
plot_z | plot_t
plot_z / plot_t
plot_z / plot_t
plot_z / plot_t
plot_z / plot_t
knitr::opts_chunk$set(echo = TRUE)
d <- googlesheets4::read_sheet(
ss = 'https://docs.google.com/spreadsheets/d/1EU1loysSmm3n2fR7rkkY2RPEU7rIxEMntUVGcA8FZ3c', )
library(tidyverse)
d <- read_csv('data/breath_holding.csv')
d
View(d)
d <- d %>%
rename(
work_currently = `Are you working?`,
work_hours     = `If you're being honest with yourself, how many hours do you work a week?`,
work_normative = `If you're being honest with yourself, how many hours should it take you to do a week's worth of your work?`,
other_classes  = `Are you taking other classes this semester?`,
number_kids    = `How many children live in your home?`,
number_adults  = `(Including you) How many adults live in your home?`,
number_pets    = `How many pets live in your home?`,
languages      = `In how many languages could you talk about the day's events?  (how many languages do you speak)`,
re_watch       = `Do you re-watch seasons of your favorite TV shows?`,
re_read        = `Do you re-read your favorite books?`,
re_listen      = `Do you re-listen to your favorite albums?`,
hold_breath    = `Don't pass out, but: how long can you hold your breath (in seconds)? Literally, start a stopwatch and see how long you can go.`
) %>%
select(
work_currently, work_hours, work_normative,
other_classes,
number_kids, number_adults, number_pets,
languages,
re_watch, re_read, re_listen,
hold_breath
)
d <- read_csv('data/breath_holding.csv') %>%
rename(
work_currently = `Are you working?`,
work_hours     = `If you're being honest with yourself, how many hours do you work a week?`,
work_normative = `If you're being honest with yourself, how many hours should it take you to do a week's worth of your work?`,
other_classes  = `Are you taking other classes this semester?`,
number_kids    = `How many children live in your home?`,
number_adults  = `(Including you) How many adults live in your home?`,
number_pets    = `How many pets live in your home?`,
languages      = `In how many languages could you talk about the day's events?  (how many languages do you speak)`,
re_watch       = `Do you re-watch seasons of your favorite TV shows?`,
re_read        = `Do you re-read your favorite books?`,
re_listen      = `Do you re-listen to your favorite albums?`,
hold_breath    = `Don't pass out, but: how long can you hold your breath (in seconds)? Literally, start a stopwatch and see how long you can go.`
) %>%
select(
work_currently, work_hours, work_normative,
other_classes,
number_kids, number_adults, number_pets,
languages,
re_watch, re_read, re_listen,
hold_breath
)
d
View(d)
d <- read_csv('data/breath_holding.csv')
View(d)
View(d)
d <- read_csv('data/breath_holding.csv') %>%
rename(
work_currently = `Are you working?`,
work_hours     = `If you're being honest with yourself, how many hours do you work a week?`,
work_normative = `If you're being honest with yourself, how many hours should it take you to do a week's worth of your work?`,
other_classes  = `Are you taking other classes this semester?`,
number_kids    = `How many children live in your home?`,
number_adults  = `(Including you) How many adults live in your home?`,
number_pets    = `How many pets live in your home?`,
number_legs    = `If you add up the tails of all the pets that live in your home, how many tails are there?`,
languages      = `In how many languages could you talk about the day's events?  (how many languages do you speak)`,
re_watch       = `Do you re-watch seasons of your favorite TV shows?`,
re_read        = `Do you re-read your favorite books?`,
re_listen      = `Do you re-listen to your favorite albums?`,
hold_breath    = `Don't pass out, but: how long can you hold your breath (in seconds)? Literally, start a stopwatch and see how long you can go.`
) %>%
select(
work_currently, work_hours, work_normative,
other_classes,
number_kids, number_adults, number_pets,
languages,
re_watch, re_read, re_listen,
hold_breath
)
d
d
d <- read_csv('data/breath_holding.csv') %>%
rename(
work_currently = `Are you working?`,
work_hours     = `If you're being honest with yourself, how many hours do you work a week?`,
work_normative = `If you're being honest with yourself, how many hours should it take you to do a week's worth of your work?`,
other_classes  = `Are you taking other classes this semester?`,
number_kids    = `How many children live in your home?`,
number_adults  = `(Including you) How many adults live in your home?`,
number_pets    = `How many pets live in your home?`,
number_legs    = `If you add up the tails of all the pets that live in your home, how many tails are there?`,
languages      = `In how many languages could you talk about the day's events?  (how many languages do you speak)`,
re_watch       = `Do you re-watch seasons of your favorite TV shows?`,
re_read        = `Do you re-read your favorite books?`,
re_listen      = `Do you re-listen to your favorite albums?`,
hold_breath    = `Don't pass out, but: how long can you hold your breath (in seconds)? Literally, start a stopwatch and see how long you can go.`
) %>%
select(
work_currently, work_hours, work_normative,
other_classes,
number_kids, number_adults, number_pets,
languages,
re_watch, re_read, re_listen,
hold_breath
)
d <- read_csv('data/breath_holding.csv') %>%
rename(
work_currently = `Are you working?`,
work_hours     = `If you're being honest with yourself, how many hours do you work a week?`,
work_normative = `If you're being honest with yourself, how many hours should it take you to do a week's worth of your work?`,
other_classes  = `Are you taking other classes this semester?`,
number_kids    = `How many children live in your home?`,
number_adults  = `(Including you) How many adults live in your home?`,
number_pets    = `How many pets live in your home?`,
number_legs    = `If you add up the tails of all the pets that live in your home, how many tails are there?`,
languages      = `In how many languages could you talk about the day's events?  (how many languages do you speak)`,
re_watch       = `Do you re-watch seasons of your favorite TV shows?`,
re_read        = `Do you re-read your favorite books?`,
re_listen      = `Do you re-listen to your favorite albums?`,
hold_breath    = `Don't pass out, but: how long can you hold your breath (in seconds)? Literally, start a stopwatch and see how long you can go.`
) %>%
select(
work_currently, work_hours, work_normative,
other_classes,
number_kids, number_adults, number_pets, number_legs,
languages,
re_watch, re_read, re_listen,
hold_breath
)
d %>%
ggplot() +
aes(x=number_legs) +
geom_histogram()
d <- read_csv('data/breath_holding.csv') %>%
rename(
work_currently = `Are you working?`,
work_hours     = `If you're being honest with yourself, how many hours do you work a week?`,
work_normative = `If you're being honest with yourself, how many hours should it take you to do a week's worth of your work?`,
other_classes  = `Are you taking other classes this semester?`,
number_kids    = `How many children live in your home?`,
number_adults  = `(Including you) How many adults live in your home?`,
number_pets    = `How many pets live in your home?`,
number_legs    = `If you add up all the legs of all the pets and people that live in your home, how many legs are there?`,
languages      = `In how many languages could you talk about the day's events?  (how many languages do you speak)`,
re_watch       = `Do you re-watch seasons of your favorite TV shows?`,
re_read        = `Do you re-read your favorite books?`,
re_listen      = `Do you re-listen to your favorite albums?`,
hold_breath    = `Don't pass out, but: how long can you hold your breath (in seconds)? Literally, start a stopwatch and see how long you can go.`
) %>%
select(
work_currently, work_hours, work_normative,
other_classes,
number_kids, number_adults, number_pets, number_legs,
languages,
re_watch, re_read, re_listen,
hold_breath
)
d %>%
ggplot() +
aes(x=number_legs) +
geom_histogram()
ggplot() +
aes(x=number_legs, y=number_tails) +
geom_point()
d %>%
ggplot() +
aes(x=number_legs, y=number_tails) +
geom_point()
d %>%
ggplot() +
aes(x=number_legs, y=number_pets) +
geom_point()
d %>%
ggplot() +
aes(x=number_legs, y=number_pets) +
geom_point() +
geom_jitter()
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets) +
geom_boxplot()
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets) +
geom_jitter()
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets) +
geom_jitter(x=0.25)
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets) +
geom_jitter(width = 0.25)
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets) +
geom_jitter(width = 0.125)
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets, color=any_kids) +
geom_jitter(width = 0.125)
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets, color=any_kids) +
geom_boxplot() #
# geom_jitter(width = 0.125)
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets, color=any_kids, fill=any_kids) +
geom_boxplot() #
# geom_jitter(width = 0.125)
d %>%
mutate(any_kids = number_kids > 0) %>%
t.test(number_pets ~ any_kids)
d %>%
mutate(any_kids = number_kids > 0) %>%
t.test(formula = number_pets ~ any_kids)
d %>%
mutate(any_kids = number_kids > 0)
d %>%
mutate(any_kids = number_kids > 0) %>%
t.test(data = ., formula = number_pets ~ any_kids)
?t.test
d %>%
mutate(any_kids = number_kids > 0) %>%
t.test(number_pets ~ any_kids, data = .)
d %>%
mutate(any_kids = number_kids > 0) %>%
t.test(number_legs ~ any_kids, data = .)
d %>%
mutate(any_kids = number_kids > 0) %>%
ggplot() +
aes(x=any_kids, y=number_pets, color=any_kids, fill=any_kids) +
geom_boxplot() #
# geom_jitter(width = 0.125)
d %>%
ggplot() +
aes(x=number_legs) +
geom_histogram()
d %>%
ggplot() +
aes(x=number_legs) +
geom_histogram(bins=10)
d %>%
ggplot() +
aes(x=number_legs) +
geom_histogram(bins=7)
?slice_sample()
d %>%
slice_sample()
d %>%
slice_sample(n = nrow(d))
d %>%
slice_sample(n = nrow(d), replace = TRUE)
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarises(m = mean(number_legs))
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(m = mean(number_legs))
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(m = mean(number_legs, na.rm=TRUE))
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(m = mean(number_legs, na.rm=TRUE))
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(m = mean(number_legs, na.rm=TRUE))
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(mean(number_legs, na.rm=TRUE))
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(mean(number_legs, na.rm=TRUE)) %>%
as.numeric()
sample_means <- replicate(1000, expr=
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(mean(number_legs, na.rm=TRUE)) %>%
as.numeric()
)
sample_means
ggplot() +
aes(x=sample_means) +
geom_histogram()
sample_means <- replicate(1000, expr=
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(mean(number_kids, na.rm=TRUE)) %>%
as.numeric()
)
ggplot() +
aes(x=sample_means) +
geom_histogram()
ggplot() +
aes(x=sample_means) +
geom_histogram(bins=20)
ggplot() +
aes(x=sample_means) +
geom_histogram(bins=10)
ks.test(sample_means)
ks.test(sample_means, y=dnorm)
sample_means <- replicate(1000, expr=
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(mean(number_legs, na.rm=TRUE)) %>%
as.numeric()
)
ks.test(sample_means, y=dnorm)
?shapiro.test()
shapiro.test(sample_means, y=dnorm)
shapiro.test(sample_means)
shaprio.test(sample_means)
sample_means <- replicate(1000, expr=
d %>%
slice_sample(n = nrow(d), replace = TRUE) %>%
summarise(mean(number_legs, na.rm=TRUE)) %>%
as.numeric()
)
shaprio.test(sample_means)
shapiro.test(sample_means)
ggplot() +
aes(x=sample_means) +
geom_histogram()
shapiro.test(d$hold_breath)
d %>%
ggplot() +
aes(x=hold_breath) +
geom_histogram()
d %>%
ggplot() +
aes(x=hold_breath, fill = number_kids > 0) +
geom_histogram(position = 'dodge')
d %>%
ggplot() +
aes(x=hold_breath, fill = number_kids > 0) +
geom_histogram(bins = 10, position = 'dodge')
d %>%
ggplot() +
aes(x=hold_breath, fill = number_kids > 0) +
geom_histogram(bins = 6position = 'dodge')
d %>%
ggplot() +
aes(x=hold_breath, fill = number_kids > 0) +
geom_histogram(bins = 6, position = 'dodge')
d <- fread('~/MIDS/w203/instructor_central/test_1_curve/2022_summer/Test_1_scores.csv')
library(data.table)
library(ggplot2)
library(patchwork)
theme_set(theme_minimal())
max_score=18
d <- fread('~/MIDS/w203/instructor_central/test_1_curve/2022_summer/Test_1_scores.csv')
setnames(
x = d,
old = c('Name', 'Section', 'Total Score'),
new = c('name', 'section', 'raw_score')
)
d <- d[ , .(name, section, raw_score)]
d
score_curver <- function(raw_score, low, high) {
grade_ranks <-  rank(raw_score, na.last = 'keep', ties.method = "average")
new_score   <- (grade_ranks - min(grade_ranks, na.rm=T)) * (high-low)/(max(grade_ranks, na.rm=T)- min(grade_ranks, na.rm=T)) + low
final_score = ifelse(
test = new_score > raw_score,
yes  = new_score,
no   = raw_score)
return(final_score)
}
d[ , final_score := score_curver(raw_score, low = .7*max_score, high=max_score)]
d[ , final_score   := score_curver(raw_score, low = .7*max_score, high=max_score)]
d[ , curve_points  := round(final_score - raw_score, 1)]
d[ , final_percent := round(final_score / max_score, 4) * 100]
fwrite(d, file= "curve_by_student.csv")
berkeley_blue <- '#003262'
berkeley_gold <- '#FDB515'
ggplot(d) +
aes(x = final_percent) +
geom_histogram(bins = max_score, fill = berkeley_blue) +
geom_vline(xintercept = d[ , mean(final_percent, na.rm = T)], color = berkeley_gold) +
# annotate(
#   'text', label = paste0('Mean after curve: ', percent, '%'),
#   x = mean(d$final_percent, na.rm = T) - 1,
#   y = 12,
#   color = berkeley_gold,
#   angle = 90) +
scale_x_continuous(
breaks = seq(from = 70, to = 100, 5)
) +
labs(
title = 'Distribution of Test 1 Final Scores',
x     = 'Final Score',
y     = 'Count'
)
d[ , plot(x=raw_score, y=curve_points, type = 'l')]
d[ , plot(x=raw_score, y=curve_points, type = 'p')]
d[ , plot(x=raw_score, y=final_score, type = 'p')]
d[ , plot(x=raw_score, y=curve_points, type = 'p')]
ggplot(d) %>%
aes(x=raw_score, y=curve_points) +
geom_jitter()
d[ , plot(x=raw_score, y=final_score, type = 'p')]
ggplot(d) %>%
aes(x=raw_score, y=curve_points) +
geom_jitter()
ggplot(d)
ggplot(d) %>%
aes(x=raw_score, y=curve_points) +
geom_jitter()
d[ , plot(x=raw_score, y=curve_points, type = 'p')]
ggplot(d) %>%
aes(x=raw_score, y=curve_points) +
geom_point()
p <- ggplot(d) %>%
aes(x=raw_score, y=curve_points) +
geom_point()
p
library(ggplot2)
ggplot(d) +
aes(x=raw_score, y=curve_points) +
geom_point()
ggplot(d) +
aes(x=raw_score, y=curve_points) +
geom_jitter()
curve_points_df <- d[ , .(
'Raw Score' = mean(raw_score),
'Curve Amount' = mean(final_score - raw_score),
'Number of Students' = .N
), keyby = -1*raw_score][,2:4]
fwrite(
x = curve_points_df,
file = '~/MIDS/w203/instructor_central/test_1_curve/2022_fall/curve_by_score.csv',
row.names = F
)
library(data.table)
library(ggplot2)
library(patchwork)
library()
theme_set(theme_minimal())
max_score=18
library(data.table)
library(ggplot2)
library(patchwork)
library()
theme_set(theme_minimal())
max_score=18
library(data.table)
library(ggplot2)
library(patchwork)
theme_set(theme_minimal())
max_score=18
d <- fread('~/MIDS/w203/instructor_central/test_1_curve/2022_summer/Test_1_scores.csv')
setnames(
x = d,
old = c('Name', 'Section', 'Total Score'),
new = c('name', 'section', 'raw_score')
)
d <- d[ , .(name, section, raw_score)]
d <- fread('~/MIDS/w203/instructor_central/test_1_curve/2022_summer/Test_1_scores.csv')
d <- fread('~/MIDS/w203/instructor_central/test_1_curve/2022_fall/Test_1_scores.csv')
d <- fread('~/MIDS/w203/instructor_central/test_1_curve/2022_fall/unit_04_test_1_scores.csv')
setnames(
x = d,
old = c('Name', 'Section', 'Total Score'),
new = c('name', 'section', 'raw_score')
)
d <- d[ , .(name, section, raw_score)]
d[ , .(median_score = median(raw_score, na.rm=TRUE),
mean_score   = mean(raw_score, na.rm=TRUE)),
by = .(section)
]
d[ , .(median_score = median(raw_score, na.rm=TRUE),
mean_score   = mean(raw_score, na.rm=TRUE)),
keyby = .(section)
]
library(data.table)
d <- fread('https://storage.cloud.google.com/vfp-2022-audiences/Universes/pa_mob_universe.csv')
d
d <- fread('~/Downloads/Universes-pa_mob_universe.csv')
d
d[ , hist(ts_tsmart_midterm_general_turnout_score)]
d[ , max(ts_tsmart_midterm_general_turnout_score)]
d[ , table(vb_voterbase_registration_status)]
d[ , hist(vb_voterbase_age)0]
d[ , hist(vb_voterbase_age)]
log(0)
?t.test
t.test
?t.test.formula
?Pair()
